//package org.example;
//
//class Main {
//    public static void main(String[] args) {
//
//        // 문제 1 : `a무기.공격();` 가 실행되는 세부과정을 자세히 쓰세요.
//        무기 a무기 = new 칼();
//        // a무기.공격();
//        // 1. 무기 타입의 리모컨을 가질 변수 a무기가 생성된다.
//        // 2. a무기에게 칼 타입의 리모컨이 들어가려고 하자 오류가 발생한다. 타입 미스매치
//        // 3. 칼 타입의 리모컨이 무기 타입의 리모컨으로 둔갑하기 위해 무기 클래스를 상속받는다. extends 무기
//        // 4. 문법 오류가 발생하지 않게 되었다.
//        // 5. 왜? : 칼 타입의 리모컨이 무기 타입의 리모컨의 형태로 둔갑하면 타입 미스매치가 발생하지 않기 때문이다.
//        // 6. a무기에 무기 타입으로 둔갑한 칼 타입의 리모컨이 들어간다.
//        // 7. 이 과정에서 칼타입 고유의 필드 또는 메소드들은 버려진다.
//        // 8. 이때문에, a무기.공격(); 해당 문장은 오류가 날 수 밖에 없다.
//
//    }
//}
//
//class 무기 {
//
//}
//
//class 칼 extends 무기 {
//    void 공격() { }
//}
